#!/usr/bin/env php

<?php

use Dotenv\Dotenv;
use HotReactor\Commands\HotReactorCommand;
use OpenSwoole\Coroutine\System;
use OpenSwoole\Runtime;
use Symfony\Component\Console\Application;

/**
 * @param string $dir
 * @param string $asset
 * @param bool $dir
 * @return string
 * @throws Exception
 */
function findAutoloadFile(string $dir, string $asset, bool $returnDir = false): string {
    $autoloadPath = $dir . $asset;
    if (file_exists($autoloadPath)) {
        return $returnDir ? dirname($autoloadPath) : $autoloadPath;
    }

    $parentDir = dirname($dir);
    if ($parentDir == $dir) {
        throw new Exception('Could not find vendor/autoload.php.');
    }

    return findAutoloadFile($parentDir, $asset);
}
require findAutoloadFile(__DIR__, '/vendor/autoload.php');

Co::set(['hook_flags'=> Runtime::HOOK_ALL]);

$dotenv = Dotenv::createImmutable(findAutoloadFile(__DIR__, '/.env', true));
$dotenv->load();

$application = new Application();

$command = new HotReactorCommand();
$application->add($command);
$application->setDefaultCommand($command->getName(), true);
$application->run();

Co::run(fn() => System::waitSignal(SIGKILL, -1));
